digraph "Fixpoint"
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  Node1 [label="{Fixpoint\n|- can_garbage\l|+ Fixpoint()\l+ operator==()\l+ hash()\l+ clone()\l+ skip_variable()\l+ get_range()\l+ invert()\l+ is_selector()\l+ has_image()\l+ eval()\l+ mark()\l+ print()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node2 [label="{_GHom\n|- refCounter\l- marking\l- immediat\l- creation_counter\l|+ has_image_skip()\l+ skip_variable()\l+ is_selector()\l+ get_range()\l+ invert()\l+ _GHom()\l+ ~_GHom()\l+ operator==()\l+ operator\<()\l+ hash()\land 7 more...\l+ get_concret()\l- eval_skip()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class__GHom.html",tooltip="The concrete data class for Homomorphisms. "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -arg" ,arrowhead="odiamond",fontname="FreeSans"];
  Node3 [label="{GHom\n|+ full_range\l|+ GHom()\l+ GHom()\l+ GHom()\l+ get_range()\l+ invert()\l+ has_image()\l+ negate()\l+ operator()()\l+ eval()\l+ skip_variable()\l+ compose()\l+ refCounter()\l+ GHom()\l+ GHom()\l+ GHom()\l+ GHom()\l+ operator==()\l+ operator!=()\l+ operator\<()\l+ is_selector()\l+ add()\l+ ccompose()\l* GHom()\l* GHom()\l* GHom()\l* GHom()\l* operator==()\l* operator!=()\l* operator\<()\l* is_selector()\l* mark()\l* hash()\l* statistics()\l* pstats()\l* garbage()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classGHom.html",tooltip="This class is the base class representing a homomorphism over DDD. "];
  Node2 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -concret" ,arrowhead="odiamond",fontname="FreeSans"];
  Node3 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +id" ,arrowhead="odiamond",fontname="FreeSans"];
}
